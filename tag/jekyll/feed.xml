<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator>
  <link href="https://alexonepath.github.io/tag/jekyll/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://alexonepath.github.io/" rel="alternate" type="text/html" />
  <updated>2018-12-18T15:09:14+09:00</updated>
  <id>https://alexonepath.github.io/tag/jekyll/feed.xml</id>

  
  
  

  
    <title type="html">About alex | </title>
  

  
    <subtitle>About alexander</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">Jekyll 테마적용</title>
      <link href="https://alexonepath.github.io/jekyll-2-theme" rel="alternate" type="text/html" title="Jekyll 테마적용" />
      <published>2018-12-18T09:00:00+09:00</published>
      <updated>2018-12-18T09:00:00+09:00</updated>
      <id>https://alexonepath.github.io/jekyll-2-theme</id>
      <content type="html" xml:base="https://alexonepath.github.io/jekyll-2-theme">&lt;blockquote&gt;
  &lt;p&gt;Jekyll(지킬) 이란?&lt;br /&gt;&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;Jekyll은 간단하고, 확장 가능한 정적 사이트를 생성하기 위한 툴이다.&lt;/li&gt;
    &lt;li&gt;Ruby로 작성 되었으며, &lt;a href=&quot;https://shopify.github.io/liquid/&quot; target=&quot;_blank&quot;&gt;Liquid&lt;/a&gt; 템플릿 언어를 사용한다.&lt;/li&gt;
    &lt;li&gt;Github Page는 정적페이지를 서버 없이 홈페이지를 운영할 수 있도록해준다.&lt;/li&gt;
    &lt;li&gt;해서 Jekyll을 이용하여 정적페이지를 생성하고, Github Page를 이용하여 서비스한다.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;사전준비&quot;&gt;사전준비&lt;/h2&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Mac에서 Ruby 설치&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;xcode-select &lt;span class=&quot;nt&quot;&gt;--install&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew install rbenv ruby-build
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'if which rbenv &amp;gt; /dev/null; then eval &quot;$(rbenv init -)&quot;; fi'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; ~/.profile
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.profile
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rbenv install 2.5.1
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rbenv global 2.5.1
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gem install bundler jekyll
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;jekyll-프로젝트-생성-및-실행-접속&quot;&gt;jekyll 프로젝트 생성 및 실행 (&lt;a href=&quot;http://127.0.0.1:4000&quot; target=&quot;_blank&quot;&gt;접속&lt;/a&gt;)&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;language-$xslt&quot;&gt;# 기본 프로젝트 생성
$ jekyll new github-page
$ cd github-page

# 실행
$ bundle exec jekyll serve
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;구조-설명&quot;&gt;구조 설명&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/post/githubpage/jekyll/jekyll-1-init-1.png&quot; alt=&quot;Jekyll Project Structure&quot; height=&quot;400px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위의 기본 프로젝트는 _post, _site만 있을것이다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;_categories :&lt;/strong&gt; 카테고리 설정을 위한 *.md 파일들이 위치하는 디렉토리 (다음회에서 설명)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;_data :&lt;/strong&gt; yaml, json, csv 파일들이 위치하는 디렉토리 (데이터를 저장해 놓고 호출하여 사용)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;_draft :&lt;/strong&gt; 작성중인 포스트가 위치하는 디렉토리 (아직 온라인에 게시하지 않을 포스트)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;_includes :&lt;/strong&gt; 재사용하기 위한 파일을 관리 {\% include file_path \%}와 같은 형식으로 포함&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;_layouts :&lt;/strong&gt; index.html 또는 포스트 등등의 컨텐츠를 포장하기 위해 사용.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;_plugins :&lt;/strong&gt; jekyll에서 사용할 플러그인을 설치한 디렉토리&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;_posts :&lt;/strong&gt; 컨텐츠를 관리하는 디렉토리 (파일형식 : year-month-day-title.md)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;assets :&lt;/strong&gt; css, image, js 등의 리소를 관리하는 디렉토리&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;output :&lt;/strong&gt; jekyll 컴파일 후 생성되는 정적 파일들이 생성되는 위치. (기본값은 _site)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;_config.yml :&lt;/strong&gt; 환경설정 정보 관리&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ide-설정하기-webstorm&quot;&gt;IDE 설정하기 (Webstorm)&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;사전준비 및 기본 프로젝트를 실행해 보았다.&lt;/li&gt;
  &lt;li&gt;이제 실제 사이트 구축을 위한 IDE 설정을 먼저하겠다.&lt;/li&gt;
  &lt;li&gt;Highlight 및 Reformat시 Liquid 문법이 적용되도록 하기.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;플러그인 설치 및 적용&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Twig 플러그인 설치 (Settings &amp;gt; Plugins &amp;gt; Browser repositories &amp;gt; Twig 검색 후 설치)&lt;/li&gt;
  &lt;li&gt;적용파일 추가 (Settings &amp;gt; Editor &amp;gt; File Types)
    &lt;ul&gt;
      &lt;li&gt;우측 (Recognized File Types) Twig 검색&lt;/li&gt;
      &lt;li&gt;Registered Patterns 아래의 2개 항목 추가&lt;/li&gt;
      &lt;li&gt;*.html, *.liquid&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content>

      
      
      
      
      

      <author>
          <name>전성종</name>
        
        
      </author>

      

      
        <category term="Jekyll" />
      
        <category term="jekyll" />
      

      
        <summary type="html">Jekyll(지킬) 이란? Jekyll은 간단하고, 확장 가능한 정적 사이트를 생성하기 위한 툴이다. Ruby로 작성 되었으며, Liquid 템플릿 언어를 사용한다. Github Page는 정적페이지를 서버 없이 홈페이지를 운영할 수 있도록해준다. 해서 Jekyll을 이용하여 정적페이지를 생성하고, Github Page를 이용하여 서비스한다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Jekyll 시작하기</title>
      <link href="https://alexonepath.github.io/jekyll-1-init" rel="alternate" type="text/html" title="Jekyll 시작하기" />
      <published>2018-12-18T09:00:00+09:00</published>
      <updated>2018-12-18T09:00:00+09:00</updated>
      <id>https://alexonepath.github.io/jekyll-1-init</id>
      <content type="html" xml:base="https://alexonepath.github.io/jekyll-1-init">&lt;blockquote&gt;
  &lt;p&gt;Jekyll(지킬) 이란?&lt;br /&gt;&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;Jekyll은 간단하고, 확장 가능한 정적 사이트를 생성하기 위한 툴이다.&lt;/li&gt;
    &lt;li&gt;Ruby로 작성 되었으며, &lt;a href=&quot;https://shopify.github.io/liquid/&quot; target=&quot;_blank&quot;&gt;Liquid&lt;/a&gt; 템플릿 언어를 사용한다.&lt;/li&gt;
    &lt;li&gt;Github Page는 정적페이지를 서버 없이 홈페이지를 운영할 수 있도록해준다.&lt;/li&gt;
    &lt;li&gt;해서 Jekyll을 이용하여 정적페이지를 생성하고, Github Page를 이용하여 서비스한다.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;사전준비&quot;&gt;사전준비&lt;/h2&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Mac에서 Ruby 설치&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;xcode-select &lt;span class=&quot;nt&quot;&gt;--install&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew install rbenv ruby-build
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'if which rbenv &amp;gt; /dev/null; then eval &quot;$(rbenv init -)&quot;; fi'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; ~/.profile
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.profile
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rbenv install 2.5.1
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rbenv global 2.5.1
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gem install bundler jekyll
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;jekyll-프로젝트-생성-및-실행-접속&quot;&gt;jekyll 프로젝트 생성 및 실행 (&lt;a href=&quot;http://127.0.0.1:4000&quot; target=&quot;_blank&quot;&gt;접속&lt;/a&gt;)&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;language-$xslt&quot;&gt;# 기본 프로젝트 생성
$ jekyll new github-page
$ cd github-page

# 실행
$ bundle exec jekyll serve
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;구조-설명&quot;&gt;구조 설명&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/post/githubpage/jekyll/jekyll-1-init-1.png&quot; alt=&quot;Jekyll Project Structure&quot; height=&quot;400px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위의 기본 프로젝트는 _post, _site만 있을것이다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;_categories :&lt;/strong&gt; 카테고리 설정을 위한 *.md 파일들이 위치하는 디렉토리 (다음회에서 설명)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;_data :&lt;/strong&gt; yaml, json, csv 파일들이 위치하는 디렉토리 (데이터를 저장해 놓고 호출하여 사용)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;_draft :&lt;/strong&gt; 작성중인 포스트가 위치하는 디렉토리 (아직 온라인에 게시하지 않을 포스트)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;_includes :&lt;/strong&gt; 재사용하기 위한 파일을 관리 {\% include file_path \%}와 같은 형식으로 포함&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;_layouts :&lt;/strong&gt; index.html 또는 포스트 등등의 컨텐츠를 포장하기 위해 사용.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;_plugins :&lt;/strong&gt; jekyll에서 사용할 플러그인을 설치한 디렉토리&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;_posts :&lt;/strong&gt; 컨텐츠를 관리하는 디렉토리 (파일형식 : year-month-day-title.md)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;assets :&lt;/strong&gt; css, image, js 등의 리소를 관리하는 디렉토리&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;output :&lt;/strong&gt; jekyll 컴파일 후 생성되는 정적 파일들이 생성되는 위치. (기본값은 _site)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;_config.yml :&lt;/strong&gt; 환경설정 정보 관리&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ide-설정하기-webstorm&quot;&gt;IDE 설정하기 (Webstorm)&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;사전준비 및 기본 프로젝트를 실행해 보았다.&lt;/li&gt;
  &lt;li&gt;이제 실제 사이트 구축을 위한 IDE 설정을 먼저하겠다.&lt;/li&gt;
  &lt;li&gt;Highlight 및 Reformat시 Liquid 문법이 적용되도록 하기.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;플러그인 설치 및 적용&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Twig 플러그인 설치 (Settings &amp;gt; Plugins &amp;gt; Browser repositories &amp;gt; Twig 검색 후 설치)&lt;/li&gt;
  &lt;li&gt;적용파일 추가 (Settings &amp;gt; Editor &amp;gt; File Types)
    &lt;ul&gt;
      &lt;li&gt;우측 (Recognized File Types) Twig 검색&lt;/li&gt;
      &lt;li&gt;Registered Patterns 아래의 2개 항목 추가&lt;/li&gt;
      &lt;li&gt;*.html, *.liquid&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content>

      
      
      
      
      

      <author>
          <name>전성종</name>
        
        
      </author>

      

      
        <category term="Jekyll" />
      
        <category term="jekyll" />
      

      
        <summary type="html">Jekyll(지킬) 이란? Jekyll은 간단하고, 확장 가능한 정적 사이트를 생성하기 위한 툴이다. Ruby로 작성 되었으며, Liquid 템플릿 언어를 사용한다. Github Page는 정적페이지를 서버 없이 홈페이지를 운영할 수 있도록해준다. 해서 Jekyll을 이용하여 정적페이지를 생성하고, Github Page를 이용하여 서비스한다.</summary>
      

      
      
    </entry>
  
</feed>
