<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> - Articles</title>
    <description>About alexander</description>
    <link>
    http://localhost:4000</link>
    
      
      <item>
        <title>Docker Compose</title>
        
          <description>&lt;blockquote&gt;
  &lt;p&gt;Docker Compose에 대한 설명과 사용법에 대해서 알아본다.&lt;br /&gt;
Docker Compose 란?&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;여러개의 컨테이너를 실행하기 위해 정의되는 툴이다.&lt;/li&gt;
    &lt;li&gt;YAML 파일을 이용하여 각 컨테이너를 정의한다.&lt;/li&gt;
    &lt;li&gt;단일 커맨드를 이용하여 정의한 compose 파일의 서비스들을 실행하거나 중지할 수 있다.&lt;/li&gt;
    &lt;li&gt;어플리케이션의 생명주기를 관리하기 위해 아래와 같은 기능을 제공한다.
      &lt;ul&gt;
        &lt;li&gt;start, stop, rebuild&lt;/li&gt;
        &lt;li&gt;실행중인 서비스들의 상태 확인&lt;/li&gt;
        &lt;li&gt;실행중인 서비스들의 로그 확인&lt;/li&gt;
        &lt;li&gt;서비스에서 일회성 명령실행&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

</description>
        
        <pubDate>Fri, 21 Dec 2018 09:00:00 +0900</pubDate>
        <link>
        http://localhost:4000/category/docker/guide/guide-3-compose.html</link>
        <guid isPermaLink="true">http://localhost:4000/category/docker/guide/guide-3-compose.html</guid>
      </item>
      
    
      
      <item>
        <title>Docker Network</title>
        
          <description>&lt;blockquote&gt;
  &lt;p&gt;Docker에서 컨네이너가 사용하는 네트워크 방식에 대해서 알아본다.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        
        <pubDate>Fri, 21 Dec 2018 09:00:00 +0900</pubDate>
        <link>
        http://localhost:4000/category/docker/guide/guide-2-network.html</link>
        <guid isPermaLink="true">http://localhost:4000/category/docker/guide/guide-2-network.html</guid>
      </item>
      
    
      
      <item>
        <title>Docker를 이용하여 홈서버 구축</title>
        
          <description>&lt;blockquote&gt;
  &lt;p&gt;Docker를 이용하여 아래의 환경들을 구축할 것이다.&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;Plex : 동영상 스트리밍 서버&lt;/li&gt;
    &lt;li&gt;Transmission : 토렌트&lt;/li&gt;
    &lt;li&gt;WebDav(Web Distributed Authoring and Versioning) : 웹서버를 저장소로 사용 (저장된 문서, 파일 읽기 및 편집가능.)&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

</description>
        
        <pubDate>Fri, 21 Dec 2018 09:00:00 +0900</pubDate>
        <link>
        http://localhost:4000/category/docker/guide/container-1-home.html</link>
        <guid isPermaLink="true">http://localhost:4000/category/docker/guide/container-1-home.html</guid>
      </item>
      
    
      
      <item>
        <title>GA 적용</title>
        
          <description>&lt;blockquote&gt;
  &lt;p&gt;Google Analytics를 이용하여 운영중인 사이트의 사용자 접속 정보를 확인한다.&lt;br /&gt;
페이지뷰, 유입된 사용자 등등의 각종 지표를 확인할 수 있다.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        
        <pubDate>Thu, 20 Dec 2018 09:00:00 +0900</pubDate>
        <link>
        http://localhost:4000/category/etc/etc-ga.html</link>
        <guid isPermaLink="true">http://localhost:4000/category/etc/etc-ga.html</guid>
      </item>
      
    
      
      <item>
        <title>Docker 기본개념</title>
        
          <description>&lt;blockquote&gt;
  &lt;p&gt;로컬, 개발, 운영에 대해서 모두 동일한 환경을 구성할 수 있다.&lt;br /&gt;
순간 트래픽이 증가하거나 하는 경우 새로운 서버에 Docker Engine만 설치하면 빠르게 환경 구축이 가능하다.&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        
        <pubDate>Thu, 20 Dec 2018 09:00:00 +0900</pubDate>
        <link>
        http://localhost:4000/category/docker/guide/guide-1-basic.html</link>
        <guid isPermaLink="true">http://localhost:4000/category/docker/guide/guide-1-basic.html</guid>
      </item>
      
    
      
      <item>
        <title>Jekyll 카테고리 및 페이징</title>
        
          <description>&lt;blockquote&gt;
  &lt;p&gt;글들을 카테고리 별로 관리하기 위해 jekyll의 collection 기능 및 스크립트를 추가한다.&lt;br /&gt;
글목록의 페이징 처리를 하기 위한 간단한 스크립트 작성&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        
        <pubDate>Tue, 18 Dec 2018 09:00:00 +0900</pubDate>
        <link>
        http://localhost:4000/category/githubpage/jekyll/jekyll-3-category.html</link>
        <guid isPermaLink="true">http://localhost:4000/category/githubpage/jekyll/jekyll-3-category.html</guid>
      </item>
      
    
      
      <item>
        <title>Jekyll 빌드에서 배포까지</title>
        
          <description>&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;/category/githubpage/jekyll/jekyll-1-init.html&quot;&gt;이전 포스트&lt;/a&gt;에서는 로컬에서 서버를 띄워서 확인하였다.&lt;br /&gt;
이번 포스팅은 jasper2 테마 적용후 Github Page에 배포하는 방법까지 설명할 것이다.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        
        <pubDate>Tue, 18 Dec 2018 09:00:00 +0900</pubDate>
        <link>
        http://localhost:4000/category/githubpage/jekyll/jekyll-2-theme.html</link>
        <guid isPermaLink="true">http://localhost:4000/category/githubpage/jekyll/jekyll-2-theme.html</guid>
      </item>
      
    
      
      <item>
        <title>Jekyll 시작하기</title>
        
          <description>&lt;blockquote&gt;
  &lt;p&gt;Jekyll(지킬) 이란?&lt;br /&gt;&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;Jekyll은 간단하고, 확장 가능한 정적 사이트를 생성하기 위한 툴이다.&lt;/li&gt;
    &lt;li&gt;Ruby로 작성 되었으며, &lt;a href=&quot;https://shopify.github.io/liquid/&quot; target=&quot;_blank&quot;&gt;Liquid&lt;/a&gt; 템플릿 언어를 사용한다.&lt;/li&gt;
    &lt;li&gt;Github Page는 정적페이지를 서버 없이 홈페이지를 운영할 수 있도록해준다.&lt;/li&gt;
    &lt;li&gt;Jekyll을 이용하여 정적페이지를 생성하고, Github Page를 이용하여 서비스한다.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

</description>
        
        <pubDate>Mon, 17 Dec 2018 09:00:00 +0900</pubDate>
        <link>
        http://localhost:4000/category/githubpage/jekyll/jekyll-1-init.html</link>
        <guid isPermaLink="true">http://localhost:4000/category/githubpage/jekyll/jekyll-1-init.html</guid>
      </item>
      
    
  </channel>
</rss>
